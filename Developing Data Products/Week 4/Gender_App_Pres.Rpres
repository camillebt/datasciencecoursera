Philippines Employment by Sex Data Visualization
========================================================
author: Camille Tolentino
date: Dec 6, 2020
autosize: true

Introduction
========================================================

The aim of the application is to visualize the data collected by the World Bank group on the gap between males and females in terms of different indicators related to employment. 

The app can be found [here](https://camillebt.shinyapps.io/sexPlot/) while the source code for the app and this presentation is [here](https://github.com/camillebt/datasciencecoursera/tree/master/Developing%20Data%20Products/Week%204)

Data Source
========================================================

The dataset was taken from [World Bank Group Gender Indicators for the Philippines](https://data.humdata.org/dataset/bfeb4908-1629-4ae1-ab35-d9010838a1bf/resource/c1ce368c-82d8-4b0d-a2dc-c67f085778f5/download/gender_phl.csv).  

It has different indicators taken over different years that shows the the percentage of males in females as employers and employees in different sectors.  

```{r, echo = FALSE, message = FALSE}
library(ggplot2)
library(plotly)
library(plyr)
library(dplyr)
library(stringr)
library(shiny)

myUrl <- "https://data.humdata.org/dataset/bfeb4908-1629-4ae1-ab35-d9010838a1bf/resource/c1ce368c-82d8-4b0d-a2dc-c67f085778f5/download/gender_phl.csv"
genderDF <- read.csv(myUrl)
genderDF <- genderDF [-1,]
colnames(genderDF)<- c("Country Name",
                       "Country.ISO3",
                       "Year",
                       "Indicator",
                       "Code",
                       "Value")

#Employment data subset 
df <- as.data.frame(genderDF[grep("^Employ",genderDF$Indicator),])

#Changing Indicators to Factor
df$Code <- as.factor(df$Code)
df$Year <- as.numeric(df$Year)
df$Value <- as.numeric(df$Value)

#Adding additional columns to merge sex data and categorize based on umbrella indicator 
df$Sex <- ifelse(grepl("FE",df$Code),"FEMALE","MALE")
df$ShortCode <- str_sub(df$Code,1,-7)
df$ShortCode <- as.factor(df$ShortCode)


for (i in 1:length(df$Indicator)){
  df$ShortName[i] <- strsplit(df$Indicator, "[,]")[[i]][1] %>% unlist()
  
}


df[df$ShortCode == "SL.EMP.TOTL.SP",]$ShortName <- "Employment to population ratio, ages 15+"
df[df$ShortCode == "SL.EMP.1524.SP",]$ShortName <- "Employment to population ratio, ages 15 - 24"

variable <- "SL.AGR.EMPL"

head(df[1:6],3)
```


App Plot
========================================================

Using the Indicator to get the subset of the data that the user wishes to visualize, a plot similar to the below is printed out upon clicking "Submit". 

```{r, echo = FALSE,fig.align = "center", fig.width = 24, fig.height = 10}
plotSub <- df[df$ShortCode == variable,]
titleText <-unique(df[df$ShortCode == variable,]$ShortName)
gPlot <- ggplot(as.data.frame(plotSub), aes(x = Year, y = Value, color = Sex))+
  geom_point() +
  labs(title = titleText)
gPlot
```

